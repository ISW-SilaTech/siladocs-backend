# ===================================================
# CONFIGURACI�N DEL PERFIL DE DOCKER
# ===================================================

# 1. CONEXI�N A POSTGRES
# Usamos el nombre del servicio de Docker ("postgres") como el host,
# no "localhost".
spring.datasource.url=jdbc:postgresql://postgres:5432/siladocs
spring.datasource.username=siladocs
spring.datasource.password=siladocs

# 2. CONFIGURACI�N DE JPA (Hibernate)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# 3. CONEXI�N A MINIO (S3)
# Usamos el nombre del servicio "minio" y su puerto API (9000)
spring.cloud.aws.s3.endpoint=http://minio:9000
spring.cloud.aws.credentials.access-key=minioadmin
spring.cloud.aws.credentials.secret-key=minioadmin

# �Importante! Esto le dice al cliente S3 que use el formato de URL de Minio
# (ej: http://minio:9000/mi-bucket/archivo.jpg)
spring.cloud.aws.s3.path-style-access-enabled=true

# ===================================================
# CONFIGURACI�N DE EMAIL (SMTP)
# ===================================================
# Ejemplo usando Gmail. Reemplaza con tu proveedor (SendGrid, etc.)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=alejandro.zarate.personal@gmail.com
spring.mail.password=dnrc zaqe siud ixkz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# URL de la p�gina de restablecimiento en tu app de React/Next.js
app.frontend.reset-url=http://localhost:3000/authentication/reset-password/basic/
